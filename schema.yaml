openapi: 3.0.3
info:
  title: Pizzeria Pasquali API
  version: 1.0.0
  description: API for Pizzeria Pasquali
paths:
  /customers/:
    get:
      operationId: customers_list
      tags:
      - customers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: customers_create
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /customers/{id}/:
    get:
      operationId: customers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - customers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: customers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: customers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: customers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - customers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /employees/:
    get:
      operationId: employees_list
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
          description: ''
    post:
      operationId: employees_create
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /employees/{id}/:
    get:
      operationId: employees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: employees_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: employees_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: employees_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /orders/api/:
    get:
      operationId: orders_api_list
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: orders_api_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /orders/api/{id}/:
    get:
      operationId: orders_api_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_api_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_api_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_api_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /pizzas/:
    get:
      operationId: pizzas_list
      tags:
      - pizzas
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pizza'
          description: ''
    post:
      operationId: pizzas_create
      tags:
      - pizzas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pizza'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pizza'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pizza'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pizza'
          description: ''
  /pizzas/{id}/:
    get:
      operationId: pizzas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pizza.
        required: true
      tags:
      - pizzas
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pizza'
          description: ''
    put:
      operationId: pizzas_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pizza.
        required: true
      tags:
      - pizzas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pizza'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pizza'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pizza'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pizza'
          description: ''
    patch:
      operationId: pizzas_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pizza.
        required: true
      tags:
      - pizzas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPizza'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPizza'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPizza'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pizza'
          description: ''
    delete:
      operationId: pizzas_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pizza.
        required: true
      tags:
      - pizzas
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /toppings/:
    get:
      operationId: toppings_list
      tags:
      - toppings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topping'
          description: ''
    post:
      operationId: toppings_create
      tags:
      - toppings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topping'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topping'
          description: ''
  /toppings/{id}/:
    get:
      operationId: toppings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topping.
        required: true
      tags:
      - toppings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topping'
          description: ''
    put:
      operationId: toppings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topping.
        required: true
      tags:
      - toppings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topping'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topping'
          description: ''
    patch:
      operationId: toppings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topping.
        required: true
      tags:
      - toppings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopping'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topping'
          description: ''
    delete:
      operationId: toppings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topping.
        required: true
      tags:
      - toppings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Customer:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
          nullable: true
          maxLength: 255
      required:
      - user
    Employee:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        position:
          type: string
          maxLength: 50
        phone_number:
          type: string
          maxLength: 20
        is_approved:
          type: boolean
      required:
      - user
    Order:
      type: object
      properties:
        customer_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      required:
      - customer_name
      - items
    OrderItem:
      type: object
      properties:
        pizza_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - pizza_name
    PatchedCustomer:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
          nullable: true
          maxLength: 255
    PatchedEmployee:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        position:
          type: string
          maxLength: 50
        phone_number:
          type: string
          maxLength: 20
        is_approved:
          type: boolean
    PatchedOrder:
      type: object
      properties:
        customer_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    PatchedPizza:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        toppings:
          type: array
          items:
            type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        vegetarian:
          type: boolean
        gluten_free:
          type: boolean
    PatchedTopping:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
    Pizza:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        toppings:
          type: array
          items:
            type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        vegetarian:
          type: boolean
        gluten_free:
          type: boolean
      required:
      - name
      - price
      - toppings
    StatusEnum:
      enum:
      - pending
      - rejected
      - picked up
      type: string
      description: |-
        * `pending` - Pending
        * `rejected` - Rejected
        * `picked up` - Picked up
    Topping:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
      required:
      - name
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
